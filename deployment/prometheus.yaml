apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: telemetry
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v3.3.0-rc.0
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/prometheus.yaml
              subPath: prometheus.yaml
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
          command:
            ["/bin/prometheus", "--config.file=/etc/prometheus/prometheus.yaml"]
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: telemetry
data:
  prometheus.yaml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 30s

    scrape_configs:      
      - job_name: 'otel-collector'
        static_configs:
          - targets: ['otel-collector-service.telemetry.svc.cluster.local:8889']


    # NOTE: Application will push metrics to port 4317,
    # then otel-collector-config prometheus part will scrape metrics from there and put to port 8889,
    # and then from there prometheus-config will scrape metrics from port 8889 and forward
    # them to prometheus that grafana can visualize from port 9090 (prometheus port).

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: telemetry
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  type: ClusterIP
